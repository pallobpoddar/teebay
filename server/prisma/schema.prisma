generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  phone     String
  address   String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  products  Product[]  @relation("SellerProducts")
  purchases Purchase[]
  rentals   Rental[]
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[] @relation("ProductCategories")
}

model Product {
  id          String     @id @default(uuid())
  title       String
  description String
  price       Decimal
  rent        Decimal
  rentOption  RentOption
  sellerId    String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  seller      User       @relation("SellerProducts", fields: [sellerId], references: [id])
  purchase    Purchase?
  rentals     Rental[]
  categories  Category[] @relation("ProductCategories")
}

model Purchase {
  id        String   @id @default(uuid())
  productId String   @unique
  buyerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  buyer     User     @relation(fields: [buyerId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Rental {
  id            String   @id @default(uuid())
  productId     String
  borrowerId    String
  rentStartDate DateTime
  rentEndDate   DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  borrower      User     @relation(fields: [borrowerId], references: [id])
  product       Product  @relation(fields: [productId], references: [id])
}

enum RentOption {
  hr
  day
}
